Grammar

    0 $accept: S $end

    1 S: SEN '\n'
    2  | S SEN '\n'

    3 SEN: E
    4    | K

    5 E: E '+' E
    6  | E '-' E
    7  | E '*' E
    8  | E '/' E
    9  | T_NUM
   10  | '(' E ')'

   11 K: IF
   12  | WHILE
   13  | ELSE


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 1 2
'(' (40) 10
')' (41) 10
'*' (42) 7
'+' (43) 5
'-' (45) 6
'/' (47) 8
error (256)
T_NUM (258) 9
IF (259) 11
ELSE (260) 13
WHILE (261) 12


Nonterminals, with rules where they appear

$accept (14)
    on left: 0
S (15)
    on left: 1 2, on right: 0 2
SEN (16)
    on left: 3 4, on right: 1 2
E (17)
    on left: 5 6 7 8 9 10, on right: 3 5 6 7 8 10
K (18)
    on left: 11 12 13, on right: 4


state 0

    0 $accept: . S $end

    T_NUM  shift, and go to state 1
    IF     shift, and go to state 2
    ELSE   shift, and go to state 3
    WHILE  shift, and go to state 4
    '('    shift, and go to state 5

    S    go to state 6
    SEN  go to state 7
    E    go to state 8
    K    go to state 9


state 1

    9 E: T_NUM .

    $default  reduce using rule 9 (E)


state 2

   11 K: IF .

    $default  reduce using rule 11 (K)


state 3

   13 K: ELSE .

    $default  reduce using rule 13 (K)


state 4

   12 K: WHILE .

    $default  reduce using rule 12 (K)


state 5

   10 E: '(' . E ')'

    T_NUM  shift, and go to state 1
    '('    shift, and go to state 5

    E  go to state 10


state 6

    0 $accept: S . $end
    2 S: S . SEN '\n'

    $end   shift, and go to state 11
    T_NUM  shift, and go to state 1
    IF     shift, and go to state 2
    ELSE   shift, and go to state 3
    WHILE  shift, and go to state 4
    '('    shift, and go to state 5

    SEN  go to state 12
    E    go to state 8
    K    go to state 9


state 7

    1 S: SEN . '\n'

    '\n'  shift, and go to state 13


state 8

    3 SEN: E .
    5 E: E . '+' E
    6  | E . '-' E
    7  | E . '*' E
    8  | E . '/' E

    '+'  shift, and go to state 14
    '-'  shift, and go to state 15
    '*'  shift, and go to state 16
    '/'  shift, and go to state 17

    $default  reduce using rule 3 (SEN)


state 9

    4 SEN: K .

    $default  reduce using rule 4 (SEN)


state 10

    5 E: E . '+' E
    6  | E . '-' E
    7  | E . '*' E
    8  | E . '/' E
   10  | '(' E . ')'

    '+'  shift, and go to state 14
    '-'  shift, and go to state 15
    '*'  shift, and go to state 16
    '/'  shift, and go to state 17
    ')'  shift, and go to state 18


state 11

    0 $accept: S $end .

    $default  accept


state 12

    2 S: S SEN . '\n'

    '\n'  shift, and go to state 19


state 13

    1 S: SEN '\n' .

    $default  reduce using rule 1 (S)


state 14

    5 E: E '+' . E

    T_NUM  shift, and go to state 1
    '('    shift, and go to state 5

    E  go to state 20


state 15

    6 E: E '-' . E

    T_NUM  shift, and go to state 1
    '('    shift, and go to state 5

    E  go to state 21


state 16

    7 E: E '*' . E

    T_NUM  shift, and go to state 1
    '('    shift, and go to state 5

    E  go to state 22


state 17

    8 E: E '/' . E

    T_NUM  shift, and go to state 1
    '('    shift, and go to state 5

    E  go to state 23


state 18

   10 E: '(' E ')' .

    $default  reduce using rule 10 (E)


state 19

    2 S: S SEN '\n' .

    $default  reduce using rule 2 (S)


state 20

    5 E: E . '+' E
    5  | E '+' E .
    6  | E . '-' E
    7  | E . '*' E
    8  | E . '/' E

    '*'  shift, and go to state 16
    '/'  shift, and go to state 17

    $default  reduce using rule 5 (E)


state 21

    5 E: E . '+' E
    6  | E . '-' E
    6  | E '-' E .
    7  | E . '*' E
    8  | E . '/' E

    '*'  shift, and go to state 16
    '/'  shift, and go to state 17

    $default  reduce using rule 6 (E)


state 22

    5 E: E . '+' E
    6  | E . '-' E
    7  | E . '*' E
    7  | E '*' E .
    8  | E . '/' E

    $default  reduce using rule 7 (E)


state 23

    5 E: E . '+' E
    6  | E . '-' E
    7  | E . '*' E
    8  | E . '/' E
    8  | E '/' E .

    $default  reduce using rule 8 (E)
