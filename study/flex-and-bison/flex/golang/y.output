Nonterminals useless in grammar

    calclist
    factor
    term


Terminals unused in grammar

    ADD
    SUB
    MUL
    DIV
    ABS
    OP
    CP
    COMMENT


Rules useless in parser due to conflicts

   10 func: %empty

   22 variable: %empty

   26 stmt: %empty

   30 while_stmt: %empty

   32 do_while_stmt: %empty

   34 if_stmt: %empty

   58 number: %empty


State 0 conflicts: 1 shift/reduce, 8 reduce/reduce
State 1 conflicts: 1 shift/reduce, 37 reduce/reduce
State 2 conflicts: 1 shift/reduce, 34 reduce/reduce
State 15 conflicts: 12 reduce/reduce
State 16 conflicts: 1 shift/reduce
State 20 conflicts: 1 shift/reduce
State 21 conflicts: 12 reduce/reduce
State 25 conflicts: 1 shift/reduce, 3 reduce/reduce
State 31 conflicts: 1 shift/reduce, 30 reduce/reduce
State 32 conflicts: 1 shift/reduce, 30 reduce/reduce
State 33 conflicts: 1 shift/reduce, 30 reduce/reduce
State 34 conflicts: 1 shift/reduce, 30 reduce/reduce
State 35 conflicts: 1 shift/reduce, 30 reduce/reduce
State 39 conflicts: 13 reduce/reduce
State 42 conflicts: 1 shift/reduce, 3 reduce/reduce
State 44 conflicts: 1 shift/reduce
State 45 conflicts: 5 shift/reduce
State 46 conflicts: 5 shift/reduce
State 47 conflicts: 5 shift/reduce
State 48 conflicts: 5 shift/reduce
State 49 conflicts: 5 shift/reduce
State 51 conflicts: 12 reduce/reduce
State 57 conflicts: 12 reduce/reduce
State 61 conflicts: 2 shift/reduce, 4 reduce/reduce
State 62 conflicts: 1 shift/reduce, 3 reduce/reduce
State 66 conflicts: 1 shift/reduce, 3 reduce/reduce
State 68 conflicts: 3 shift/reduce, 32 reduce/reduce
State 73 conflicts: 12 reduce/reduce
State 74 conflicts: 3 shift/reduce, 28 reduce/reduce
State 75 conflicts: 2 shift/reduce, 5 reduce/reduce
State 76 conflicts: 3 shift/reduce, 32 reduce/reduce
State 77 conflicts: 1 shift/reduce, 3 reduce/reduce
State 80 conflicts: 2 shift/reduce, 4 reduce/reduce


Grammar

    0 $accept: compilation_unit $end

    1 compilation_unit: %empty
    2                 | test EOL
    3                 | func EOL
    4                 | stmt EOL

    5 test: %empty
    6     | tparam ',' test
    7     | tparam

    8 tparam: %empty
    9       | identifier identifier

   10 func: %empty
   11     | identifier identifier '(' params ')' block

   12 params: %empty
   13       | linkedListNode ',' params
   14       | linkedListNode

   15 linkedListNode: %empty
   16      | identifier identifier

   17 block: %empty
   18      | variables stmts block
   19      | '{' variables stmts block '}'

   20 variables: %empty
   21          | variable ';' variables

   22 variable: %empty
   23         | identifier identifier

   24 stmts: %empty
   25      | stmt stmts

   26 stmt: %empty
   27     | if_stmt
   28     | while_stmt
   29     | do_while_stmt

   30 while_stmt: %empty
   31           | WHILE con then

   32 do_while_stmt: %empty
   33              | DO then WHILE con ';'

   34 if_stmt: %empty
   35        | IF con then
   36        | IF con then ELSE else_body

   37 con: %empty
   38    | linkedListNode

   39 then: %empty
   40     | '{' then_exprs '}'

   41 else_body: %empty
   42          | '{' else_exprs '}'

   43 then_exprs: %empty
   44           | linkedListNode ';' then_exprs

   45 else_exprs: %empty
   46           | linkedListNode ';' else_exprs

   47 linkedListNode: %empty
   48     | linkedListNode '+' linkedListNode
   49     | linkedListNode '-' linkedListNode
   50     | linkedListNode '*' linkedListNode
   51     | linkedListNode '/' linkedListNode
   52     | linkedListNode '=' linkedListNode
   53     | '(' linkedListNode ')'
   54     | identifier
   55     | number

   56 identifier: %empty
   57           | IDENTIFIER

   58 number: %empty
   59       | NUMBER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 11 53
    ')' (41) 11 53
    '*' (42) 50
    '+' (43) 48
    ',' (44) 6 13
    '-' (45) 49
    '/' (47) 51
    ';' (59) 21 33 44 46
    '=' (61) 52
    '{' (123) 19 40 42
    '}' (125) 19 40 42
    error (256)
    NUMBER <intval> (258) 59
    ADD <strval> (259)
    SUB <strval> (260)
    MUL <strval> (261)
    DIV <strval> (262)
    ABS <strval> (263)
    EOL <strval> (264) 2 3 4
    OP (265)
    CP (266)
    IF <strval> (267) 35 36
    ELSE <strval> (268) 36
    WHILE (269) 31 33
    DO (270) 33
    COMMENT (271)
    IDENTIFIER <strval> (272) 57


Nonterminals, with rules where they appear

    $accept (29)
        on left: 0
    compilation_unit <node> (30)
        on left: 1 2 3 4
        on right: 0
    test <strval> (31)
        on left: 5 6 7
        on right: 2 6
    tparam <strval> (32)
        on left: 8 9
        on right: 6 7
    func <node> (33)
        on left: 10 11
        on right: 3
    params <pn> (34)
        on left: 12 13 14
        on right: 11 13
    linkedListNode <node> (35)
        on left: 15 16
        on right: 13 14
    block <node> (36)
        on left: 17 18 19
        on right: 11 18 19
    variables <fvn> (37)
        on left: 20 21
        on right: 18 19 21
    variable <node> (38)
        on left: 22 23
        on right: 21
    stmts <fsn> (39)
        on left: 24 25
        on right: 18 19 25
    stmt <node> (40)
        on left: 26 27 28 29
        on right: 4 25
    while_stmt <node> (41)
        on left: 30 31
        on right: 28
    do_while_stmt <node> (42)
        on left: 32 33
        on right: 29
    if_stmt <node> (43)
        on left: 34 35 36
        on right: 27
    con <node> (44)
        on left: 37 38
        on right: 31 33 35 36
    then <en> (45)
        on left: 39 40
        on right: 31 33 35 36
    else_body <en> (46)
        on left: 41 42
        on right: 36
    then_exprs <en> (47)
        on left: 43 44
        on right: 40 44
    else_exprs <en> (48)
        on left: 45 46
        on right: 42 46
    linkedListNode <node> (49)
        on left: 47 48 49 50 51 52 53 54 55
        on right: 38 44 46 48 49 50 51 52 53
    identifier <node> (50)
        on left: 56 57
        on right: 9 11 16 23 54
    number <node> (51)
        on left: 58 59
        on right: 55


State 0

    0 $accept: • compilation_unit $end

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    DO          shift, and go to state 3
    IDENTIFIER  shift, and go to state 4

    EOL         reduce using rule 5 (test)
    EOL         [reduce using rule 8 (tparam)]
    EOL         [reduce using rule 10 (func)]
    EOL         [reduce using rule 26 (stmt)]
    EOL         [reduce using rule 30 (while_stmt)]
    EOL         [reduce using rule 32 (do_while_stmt)]
    EOL         [reduce using rule 34 (if_stmt)]
    EOL         [reduce using rule 56 (identifier)]
    IDENTIFIER  [reduce using rule 56 (identifier)]
    ','         reduce using rule 8 (tparam)
    ','         [reduce using rule 56 (identifier)]
    '('         reduce using rule 56 (identifier)
    $default    reduce using rule 1 (compilation_unit)

    compilation_unit  go to state 5
    test              go to state 6
    tparam            go to state 7
    func              go to state 8
    stmt              go to state 9
    while_stmt        go to state 10
    do_while_stmt     go to state 11
    if_stmt           go to state 12
    identifier        go to state 13


State 1

   35 if_stmt: IF • con then
   36        | IF • con then ELSE else_body

    NUMBER      shift, and go to state 14
    IDENTIFIER  shift, and go to state 4
    '('         shift, and go to state 15

    EOL         reduce using rule 37 (con)
    EOL         [reduce using rule 47 (linkedListNode)]
    EOL         [reduce using rule 56 (identifier)]
    EOL         [reduce using rule 58 (number)]
    IF          reduce using rule 37 (con)
    IF          [reduce using rule 47 (linkedListNode)]
    IF          [reduce using rule 56 (identifier)]
    IF          [reduce using rule 58 (number)]
    ELSE        reduce using rule 37 (con)
    ELSE        [reduce using rule 47 (linkedListNode)]
    ELSE        [reduce using rule 56 (identifier)]
    ELSE        [reduce using rule 58 (number)]
    WHILE       reduce using rule 37 (con)
    WHILE       [reduce using rule 47 (linkedListNode)]
    WHILE       [reduce using rule 56 (identifier)]
    WHILE       [reduce using rule 58 (number)]
    DO          reduce using rule 37 (con)
    DO          [reduce using rule 47 (linkedListNode)]
    DO          [reduce using rule 56 (identifier)]
    DO          [reduce using rule 58 (number)]
    IDENTIFIER  [reduce using rule 37 (con)]
    IDENTIFIER  [reduce using rule 47 (linkedListNode)]
    IDENTIFIER  [reduce using rule 56 (identifier)]
    IDENTIFIER  [reduce using rule 58 (number)]
    '{'         reduce using rule 37 (con)
    '{'         [reduce using rule 47 (linkedListNode)]
    '{'         [reduce using rule 56 (identifier)]
    '{'         [reduce using rule 58 (number)]
    '}'         reduce using rule 37 (con)
    '}'         [reduce using rule 47 (linkedListNode)]
    '}'         [reduce using rule 56 (identifier)]
    '}'         [reduce using rule 58 (number)]
    ';'         reduce using rule 37 (con)
    ';'         [reduce using rule 47 (linkedListNode)]
    ';'         [reduce using rule 56 (identifier)]
    ';'         [reduce using rule 58 (number)]
    '+'         reduce using rule 47 (linkedListNode)
    '+'         [reduce using rule 56 (identifier)]
    '+'         [reduce using rule 58 (number)]
    '-'         reduce using rule 47 (linkedListNode)
    '-'         [reduce using rule 56 (identifier)]
    '-'         [reduce using rule 58 (number)]
    '*'         reduce using rule 47 (linkedListNode)
    '*'         [reduce using rule 56 (identifier)]
    '*'         [reduce using rule 58 (number)]
    '/'         reduce using rule 47 (linkedListNode)
    '/'         [reduce using rule 56 (identifier)]
    '/'         [reduce using rule 58 (number)]
    '='         reduce using rule 47 (linkedListNode)
    '='         [reduce using rule 56 (identifier)]
    '='         [reduce using rule 58 (number)]
    $default    reduce using rule 37 (con)

    con         go to state 16
    linkedListNode        go to state 17
    identifier  go to state 18
    number      go to state 19


State 2

   31 while_stmt: WHILE • con then

    NUMBER      shift, and go to state 14
    IDENTIFIER  shift, and go to state 4
    '('         shift, and go to state 15

    EOL         reduce using rule 37 (con)
    EOL         [reduce using rule 47 (linkedListNode)]
    EOL         [reduce using rule 56 (identifier)]
    EOL         [reduce using rule 58 (number)]
    IF          reduce using rule 37 (con)
    IF          [reduce using rule 47 (linkedListNode)]
    IF          [reduce using rule 56 (identifier)]
    IF          [reduce using rule 58 (number)]
    WHILE       reduce using rule 37 (con)
    WHILE       [reduce using rule 47 (linkedListNode)]
    WHILE       [reduce using rule 56 (identifier)]
    WHILE       [reduce using rule 58 (number)]
    DO          reduce using rule 37 (con)
    DO          [reduce using rule 47 (linkedListNode)]
    DO          [reduce using rule 56 (identifier)]
    DO          [reduce using rule 58 (number)]
    IDENTIFIER  [reduce using rule 37 (con)]
    IDENTIFIER  [reduce using rule 47 (linkedListNode)]
    IDENTIFIER  [reduce using rule 56 (identifier)]
    IDENTIFIER  [reduce using rule 58 (number)]
    '{'         reduce using rule 37 (con)
    '{'         [reduce using rule 47 (linkedListNode)]
    '{'         [reduce using rule 56 (identifier)]
    '{'         [reduce using rule 58 (number)]
    '}'         reduce using rule 37 (con)
    '}'         [reduce using rule 47 (linkedListNode)]
    '}'         [reduce using rule 56 (identifier)]
    '}'         [reduce using rule 58 (number)]
    ';'         reduce using rule 37 (con)
    ';'         [reduce using rule 47 (linkedListNode)]
    ';'         [reduce using rule 56 (identifier)]
    ';'         [reduce using rule 58 (number)]
    '+'         reduce using rule 47 (linkedListNode)
    '+'         [reduce using rule 56 (identifier)]
    '+'         [reduce using rule 58 (number)]
    '-'         reduce using rule 47 (linkedListNode)
    '-'         [reduce using rule 56 (identifier)]
    '-'         [reduce using rule 58 (number)]
    '*'         reduce using rule 47 (linkedListNode)
    '*'         [reduce using rule 56 (identifier)]
    '*'         [reduce using rule 58 (number)]
    '/'         reduce using rule 47 (linkedListNode)
    '/'         [reduce using rule 56 (identifier)]
    '/'         [reduce using rule 58 (number)]
    '='         reduce using rule 47 (linkedListNode)
    '='         [reduce using rule 56 (identifier)]
    '='         [reduce using rule 58 (number)]
    $default    reduce using rule 37 (con)

    con         go to state 20
    linkedListNode        go to state 17
    identifier  go to state 18
    number      go to state 19


State 3

   33 do_while_stmt: DO • then WHILE con ';'

    '{'  shift, and go to state 21

    $default  reduce using rule 39 (then)

    then  go to state 22


State 4

   57 identifier: IDENTIFIER •

    $default  reduce using rule 57 (identifier)


State 5

    0 $accept: compilation_unit • $end

    $end  shift, and go to state 23


State 6

    2 compilation_unit: test • EOL

    EOL  shift, and go to state 24


State 7

    6 test: tparam • ',' test
    7     | tparam •

    ','  shift, and go to state 25

    $default  reduce using rule 7 (test)


State 8

    3 compilation_unit: func • EOL

    EOL  shift, and go to state 26


State 9

    4 compilation_unit: stmt • EOL

    EOL  shift, and go to state 27


State 10

   28 stmt: while_stmt •

    $default  reduce using rule 28 (stmt)


State 11

   29 stmt: do_while_stmt •

    $default  reduce using rule 29 (stmt)


State 12

   27 stmt: if_stmt •

    $default  reduce using rule 27 (stmt)


State 13

    9 tparam: identifier • identifier
   11 func: identifier • identifier '(' params ')' block

    IDENTIFIER  shift, and go to state 4

    $default  reduce using rule 56 (identifier)

    identifier  go to state 28


State 14

   59 number: NUMBER •

    $default  reduce using rule 59 (number)


State 15

   53 linkedListNode: '(' • linkedListNode ')'

    NUMBER      shift, and go to state 14
    IDENTIFIER  shift, and go to state 4
    '('         shift, and go to state 15

    ')'       reduce using rule 47 (linkedListNode)
    ')'       [reduce using rule 56 (identifier)]
    ')'       [reduce using rule 58 (number)]
    '+'       reduce using rule 47 (linkedListNode)
    '+'       [reduce using rule 56 (identifier)]
    '+'       [reduce using rule 58 (number)]
    '-'       reduce using rule 47 (linkedListNode)
    '-'       [reduce using rule 56 (identifier)]
    '-'       [reduce using rule 58 (number)]
    '*'       reduce using rule 47 (linkedListNode)
    '*'       [reduce using rule 56 (identifier)]
    '*'       [reduce using rule 58 (number)]
    '/'       reduce using rule 47 (linkedListNode)
    '/'       [reduce using rule 56 (identifier)]
    '/'       [reduce using rule 58 (number)]
    '='       reduce using rule 47 (linkedListNode)
    '='       [reduce using rule 56 (identifier)]
    '='       [reduce using rule 58 (number)]
    $default  reduce using rule 47 (linkedListNode)

    linkedListNode        go to state 29
    identifier  go to state 18
    number      go to state 19


State 16

   35 if_stmt: IF con • then
   36        | IF con • then ELSE else_body

    '{'  shift, and go to state 21

    '{'       [reduce using rule 39 (then)]
    $default  reduce using rule 39 (then)

    then  go to state 30


State 17

   38 con: linkedListNode •
   48 linkedListNode: linkedListNode • '+' linkedListNode
   49     | linkedListNode • '-' linkedListNode
   50     | linkedListNode • '*' linkedListNode
   51     | linkedListNode • '/' linkedListNode
   52     | linkedListNode • '=' linkedListNode

    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    '='  shift, and go to state 35

    $default  reduce using rule 38 (con)


State 18

   54 linkedListNode: identifier •

    $default  reduce using rule 54 (linkedListNode)


State 19

   55 linkedListNode: number •

    $default  reduce using rule 55 (linkedListNode)


State 20

   31 while_stmt: WHILE con • then

    '{'  shift, and go to state 21

    '{'       [reduce using rule 39 (then)]
    $default  reduce using rule 39 (then)

    then  go to state 36


State 21

   40 then: '{' • then_exprs '}'

    NUMBER      shift, and go to state 14
    IDENTIFIER  shift, and go to state 4
    '('         shift, and go to state 15

    '}'       reduce using rule 43 (then_exprs)
    ';'       reduce using rule 47 (linkedListNode)
    ';'       [reduce using rule 56 (identifier)]
    ';'       [reduce using rule 58 (number)]
    '+'       reduce using rule 47 (linkedListNode)
    '+'       [reduce using rule 56 (identifier)]
    '+'       [reduce using rule 58 (number)]
    '-'       reduce using rule 47 (linkedListNode)
    '-'       [reduce using rule 56 (identifier)]
    '-'       [reduce using rule 58 (number)]
    '*'       reduce using rule 47 (linkedListNode)
    '*'       [reduce using rule 56 (identifier)]
    '*'       [reduce using rule 58 (number)]
    '/'       reduce using rule 47 (linkedListNode)
    '/'       [reduce using rule 56 (identifier)]
    '/'       [reduce using rule 58 (number)]
    '='       reduce using rule 47 (linkedListNode)
    '='       [reduce using rule 56 (identifier)]
    '='       [reduce using rule 58 (number)]
    $default  reduce using rule 47 (linkedListNode)

    then_exprs  go to state 37
    linkedListNode        go to state 38
    identifier  go to state 18
    number      go to state 19


State 22

   33 do_while_stmt: DO then • WHILE con ';'

    WHILE  shift, and go to state 39


State 23

    0 $accept: compilation_unit $end •

    $default  accept


State 24

    2 compilation_unit: test EOL •

    $default  reduce using rule 2 (compilation_unit)


State 25

    6 test: tparam ',' • test

    IDENTIFIER  shift, and go to state 4

    EOL         reduce using rule 5 (test)
    EOL         [reduce using rule 8 (tparam)]
    EOL         [reduce using rule 56 (identifier)]
    IDENTIFIER  [reduce using rule 56 (identifier)]
    ','         reduce using rule 8 (tparam)
    ','         [reduce using rule 56 (identifier)]
    $default    reduce using rule 5 (test)

    test        go to state 40
    tparam      go to state 7
    identifier  go to state 41


State 26

    3 compilation_unit: func EOL •

    $default  reduce using rule 3 (compilation_unit)


State 27

    4 compilation_unit: stmt EOL •

    $default  reduce using rule 4 (compilation_unit)


State 28

    9 tparam: identifier identifier •
   11 func: identifier identifier • '(' params ')' block

    '('  shift, and go to state 42

    $default  reduce using rule 9 (tparam)


State 29

   48 linkedListNode: linkedListNode • '+' linkedListNode
   49     | linkedListNode • '-' linkedListNode
   50     | linkedListNode • '*' linkedListNode
   51     | linkedListNode • '/' linkedListNode
   52     | linkedListNode • '=' linkedListNode
   53     | '(' linkedListNode • ')'

    ')'  shift, and go to state 43
    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    '='  shift, and go to state 35


State 30

   35 if_stmt: IF con then •
   36        | IF con then • ELSE else_body

    ELSE  shift, and go to state 44

    $default  reduce using rule 35 (if_stmt)


State 31

   48 linkedListNode: linkedListNode '+' • linkedListNode

    NUMBER      shift, and go to state 14
    IDENTIFIER  shift, and go to state 4
    '('         shift, and go to state 15

    EOL         reduce using rule 47 (linkedListNode)
    EOL         [reduce using rule 56 (identifier)]
    EOL         [reduce using rule 58 (number)]
    IF          reduce using rule 47 (linkedListNode)
    IF          [reduce using rule 56 (identifier)]
    IF          [reduce using rule 58 (number)]
    ELSE        reduce using rule 47 (linkedListNode)
    ELSE        [reduce using rule 56 (identifier)]
    ELSE        [reduce using rule 58 (number)]
    WHILE       reduce using rule 47 (linkedListNode)
    WHILE       [reduce using rule 56 (identifier)]
    WHILE       [reduce using rule 58 (number)]
    DO          reduce using rule 47 (linkedListNode)
    DO          [reduce using rule 56 (identifier)]
    DO          [reduce using rule 58 (number)]
    IDENTIFIER  [reduce using rule 47 (linkedListNode)]
    IDENTIFIER  [reduce using rule 56 (identifier)]
    IDENTIFIER  [reduce using rule 58 (number)]
    ')'         reduce using rule 47 (linkedListNode)
    ')'         [reduce using rule 56 (identifier)]
    ')'         [reduce using rule 58 (number)]
    '{'         reduce using rule 47 (linkedListNode)
    '{'         [reduce using rule 56 (identifier)]
    '{'         [reduce using rule 58 (number)]
    '}'         reduce using rule 47 (linkedListNode)
    '}'         [reduce using rule 56 (identifier)]
    '}'         [reduce using rule 58 (number)]
    ';'         reduce using rule 47 (linkedListNode)
    ';'         [reduce using rule 56 (identifier)]
    ';'         [reduce using rule 58 (number)]
    '+'         reduce using rule 47 (linkedListNode)
    '+'         [reduce using rule 56 (identifier)]
    '+'         [reduce using rule 58 (number)]
    '-'         reduce using rule 47 (linkedListNode)
    '-'         [reduce using rule 56 (identifier)]
    '-'         [reduce using rule 58 (number)]
    '*'         reduce using rule 47 (linkedListNode)
    '*'         [reduce using rule 56 (identifier)]
    '*'         [reduce using rule 58 (number)]
    '/'         reduce using rule 47 (linkedListNode)
    '/'         [reduce using rule 56 (identifier)]
    '/'         [reduce using rule 58 (number)]
    '='         reduce using rule 47 (linkedListNode)
    '='         [reduce using rule 56 (identifier)]
    '='         [reduce using rule 58 (number)]
    $default    reduce using rule 47 (linkedListNode)

    linkedListNode        go to state 45
    identifier  go to state 18
    number      go to state 19


State 32

   49 linkedListNode: linkedListNode '-' • linkedListNode

    NUMBER      shift, and go to state 14
    IDENTIFIER  shift, and go to state 4
    '('         shift, and go to state 15

    EOL         reduce using rule 47 (linkedListNode)
    EOL         [reduce using rule 56 (identifier)]
    EOL         [reduce using rule 58 (number)]
    IF          reduce using rule 47 (linkedListNode)
    IF          [reduce using rule 56 (identifier)]
    IF          [reduce using rule 58 (number)]
    ELSE        reduce using rule 47 (linkedListNode)
    ELSE        [reduce using rule 56 (identifier)]
    ELSE        [reduce using rule 58 (number)]
    WHILE       reduce using rule 47 (linkedListNode)
    WHILE       [reduce using rule 56 (identifier)]
    WHILE       [reduce using rule 58 (number)]
    DO          reduce using rule 47 (linkedListNode)
    DO          [reduce using rule 56 (identifier)]
    DO          [reduce using rule 58 (number)]
    IDENTIFIER  [reduce using rule 47 (linkedListNode)]
    IDENTIFIER  [reduce using rule 56 (identifier)]
    IDENTIFIER  [reduce using rule 58 (number)]
    ')'         reduce using rule 47 (linkedListNode)
    ')'         [reduce using rule 56 (identifier)]
    ')'         [reduce using rule 58 (number)]
    '{'         reduce using rule 47 (linkedListNode)
    '{'         [reduce using rule 56 (identifier)]
    '{'         [reduce using rule 58 (number)]
    '}'         reduce using rule 47 (linkedListNode)
    '}'         [reduce using rule 56 (identifier)]
    '}'         [reduce using rule 58 (number)]
    ';'         reduce using rule 47 (linkedListNode)
    ';'         [reduce using rule 56 (identifier)]
    ';'         [reduce using rule 58 (number)]
    '+'         reduce using rule 47 (linkedListNode)
    '+'         [reduce using rule 56 (identifier)]
    '+'         [reduce using rule 58 (number)]
    '-'         reduce using rule 47 (linkedListNode)
    '-'         [reduce using rule 56 (identifier)]
    '-'         [reduce using rule 58 (number)]
    '*'         reduce using rule 47 (linkedListNode)
    '*'         [reduce using rule 56 (identifier)]
    '*'         [reduce using rule 58 (number)]
    '/'         reduce using rule 47 (linkedListNode)
    '/'         [reduce using rule 56 (identifier)]
    '/'         [reduce using rule 58 (number)]
    '='         reduce using rule 47 (linkedListNode)
    '='         [reduce using rule 56 (identifier)]
    '='         [reduce using rule 58 (number)]
    $default    reduce using rule 47 (linkedListNode)

    linkedListNode        go to state 46
    identifier  go to state 18
    number      go to state 19


State 33

   50 linkedListNode: linkedListNode '*' • linkedListNode

    NUMBER      shift, and go to state 14
    IDENTIFIER  shift, and go to state 4
    '('         shift, and go to state 15

    EOL         reduce using rule 47 (linkedListNode)
    EOL         [reduce using rule 56 (identifier)]
    EOL         [reduce using rule 58 (number)]
    IF          reduce using rule 47 (linkedListNode)
    IF          [reduce using rule 56 (identifier)]
    IF          [reduce using rule 58 (number)]
    ELSE        reduce using rule 47 (linkedListNode)
    ELSE        [reduce using rule 56 (identifier)]
    ELSE        [reduce using rule 58 (number)]
    WHILE       reduce using rule 47 (linkedListNode)
    WHILE       [reduce using rule 56 (identifier)]
    WHILE       [reduce using rule 58 (number)]
    DO          reduce using rule 47 (linkedListNode)
    DO          [reduce using rule 56 (identifier)]
    DO          [reduce using rule 58 (number)]
    IDENTIFIER  [reduce using rule 47 (linkedListNode)]
    IDENTIFIER  [reduce using rule 56 (identifier)]
    IDENTIFIER  [reduce using rule 58 (number)]
    ')'         reduce using rule 47 (linkedListNode)
    ')'         [reduce using rule 56 (identifier)]
    ')'         [reduce using rule 58 (number)]
    '{'         reduce using rule 47 (linkedListNode)
    '{'         [reduce using rule 56 (identifier)]
    '{'         [reduce using rule 58 (number)]
    '}'         reduce using rule 47 (linkedListNode)
    '}'         [reduce using rule 56 (identifier)]
    '}'         [reduce using rule 58 (number)]
    ';'         reduce using rule 47 (linkedListNode)
    ';'         [reduce using rule 56 (identifier)]
    ';'         [reduce using rule 58 (number)]
    '+'         reduce using rule 47 (linkedListNode)
    '+'         [reduce using rule 56 (identifier)]
    '+'         [reduce using rule 58 (number)]
    '-'         reduce using rule 47 (linkedListNode)
    '-'         [reduce using rule 56 (identifier)]
    '-'         [reduce using rule 58 (number)]
    '*'         reduce using rule 47 (linkedListNode)
    '*'         [reduce using rule 56 (identifier)]
    '*'         [reduce using rule 58 (number)]
    '/'         reduce using rule 47 (linkedListNode)
    '/'         [reduce using rule 56 (identifier)]
    '/'         [reduce using rule 58 (number)]
    '='         reduce using rule 47 (linkedListNode)
    '='         [reduce using rule 56 (identifier)]
    '='         [reduce using rule 58 (number)]
    $default    reduce using rule 47 (linkedListNode)

    linkedListNode        go to state 47
    identifier  go to state 18
    number      go to state 19


State 34

   51 linkedListNode: linkedListNode '/' • linkedListNode

    NUMBER      shift, and go to state 14
    IDENTIFIER  shift, and go to state 4
    '('         shift, and go to state 15

    EOL         reduce using rule 47 (linkedListNode)
    EOL         [reduce using rule 56 (identifier)]
    EOL         [reduce using rule 58 (number)]
    IF          reduce using rule 47 (linkedListNode)
    IF          [reduce using rule 56 (identifier)]
    IF          [reduce using rule 58 (number)]
    ELSE        reduce using rule 47 (linkedListNode)
    ELSE        [reduce using rule 56 (identifier)]
    ELSE        [reduce using rule 58 (number)]
    WHILE       reduce using rule 47 (linkedListNode)
    WHILE       [reduce using rule 56 (identifier)]
    WHILE       [reduce using rule 58 (number)]
    DO          reduce using rule 47 (linkedListNode)
    DO          [reduce using rule 56 (identifier)]
    DO          [reduce using rule 58 (number)]
    IDENTIFIER  [reduce using rule 47 (linkedListNode)]
    IDENTIFIER  [reduce using rule 56 (identifier)]
    IDENTIFIER  [reduce using rule 58 (number)]
    ')'         reduce using rule 47 (linkedListNode)
    ')'         [reduce using rule 56 (identifier)]
    ')'         [reduce using rule 58 (number)]
    '{'         reduce using rule 47 (linkedListNode)
    '{'         [reduce using rule 56 (identifier)]
    '{'         [reduce using rule 58 (number)]
    '}'         reduce using rule 47 (linkedListNode)
    '}'         [reduce using rule 56 (identifier)]
    '}'         [reduce using rule 58 (number)]
    ';'         reduce using rule 47 (linkedListNode)
    ';'         [reduce using rule 56 (identifier)]
    ';'         [reduce using rule 58 (number)]
    '+'         reduce using rule 47 (linkedListNode)
    '+'         [reduce using rule 56 (identifier)]
    '+'         [reduce using rule 58 (number)]
    '-'         reduce using rule 47 (linkedListNode)
    '-'         [reduce using rule 56 (identifier)]
    '-'         [reduce using rule 58 (number)]
    '*'         reduce using rule 47 (linkedListNode)
    '*'         [reduce using rule 56 (identifier)]
    '*'         [reduce using rule 58 (number)]
    '/'         reduce using rule 47 (linkedListNode)
    '/'         [reduce using rule 56 (identifier)]
    '/'         [reduce using rule 58 (number)]
    '='         reduce using rule 47 (linkedListNode)
    '='         [reduce using rule 56 (identifier)]
    '='         [reduce using rule 58 (number)]
    $default    reduce using rule 47 (linkedListNode)

    linkedListNode        go to state 48
    identifier  go to state 18
    number      go to state 19


State 35

   52 linkedListNode: linkedListNode '=' • linkedListNode

    NUMBER      shift, and go to state 14
    IDENTIFIER  shift, and go to state 4
    '('         shift, and go to state 15

    EOL         reduce using rule 47 (linkedListNode)
    EOL         [reduce using rule 56 (identifier)]
    EOL         [reduce using rule 58 (number)]
    IF          reduce using rule 47 (linkedListNode)
    IF          [reduce using rule 56 (identifier)]
    IF          [reduce using rule 58 (number)]
    ELSE        reduce using rule 47 (linkedListNode)
    ELSE        [reduce using rule 56 (identifier)]
    ELSE        [reduce using rule 58 (number)]
    WHILE       reduce using rule 47 (linkedListNode)
    WHILE       [reduce using rule 56 (identifier)]
    WHILE       [reduce using rule 58 (number)]
    DO          reduce using rule 47 (linkedListNode)
    DO          [reduce using rule 56 (identifier)]
    DO          [reduce using rule 58 (number)]
    IDENTIFIER  [reduce using rule 47 (linkedListNode)]
    IDENTIFIER  [reduce using rule 56 (identifier)]
    IDENTIFIER  [reduce using rule 58 (number)]
    ')'         reduce using rule 47 (linkedListNode)
    ')'         [reduce using rule 56 (identifier)]
    ')'         [reduce using rule 58 (number)]
    '{'         reduce using rule 47 (linkedListNode)
    '{'         [reduce using rule 56 (identifier)]
    '{'         [reduce using rule 58 (number)]
    '}'         reduce using rule 47 (linkedListNode)
    '}'         [reduce using rule 56 (identifier)]
    '}'         [reduce using rule 58 (number)]
    ';'         reduce using rule 47 (linkedListNode)
    ';'         [reduce using rule 56 (identifier)]
    ';'         [reduce using rule 58 (number)]
    '+'         reduce using rule 47 (linkedListNode)
    '+'         [reduce using rule 56 (identifier)]
    '+'         [reduce using rule 58 (number)]
    '-'         reduce using rule 47 (linkedListNode)
    '-'         [reduce using rule 56 (identifier)]
    '-'         [reduce using rule 58 (number)]
    '*'         reduce using rule 47 (linkedListNode)
    '*'         [reduce using rule 56 (identifier)]
    '*'         [reduce using rule 58 (number)]
    '/'         reduce using rule 47 (linkedListNode)
    '/'         [reduce using rule 56 (identifier)]
    '/'         [reduce using rule 58 (number)]
    '='         reduce using rule 47 (linkedListNode)
    '='         [reduce using rule 56 (identifier)]
    '='         [reduce using rule 58 (number)]
    $default    reduce using rule 47 (linkedListNode)

    linkedListNode        go to state 49
    identifier  go to state 18
    number      go to state 19


State 36

   31 while_stmt: WHILE con then •

    $default  reduce using rule 31 (while_stmt)


State 37

   40 then: '{' then_exprs • '}'

    '}'  shift, and go to state 50


State 38

   44 then_exprs: linkedListNode • ';' then_exprs
   48 linkedListNode: linkedListNode • '+' linkedListNode
   49     | linkedListNode • '-' linkedListNode
   50     | linkedListNode • '*' linkedListNode
   51     | linkedListNode • '/' linkedListNode
   52     | linkedListNode • '=' linkedListNode

    ';'  shift, and go to state 51
    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    '='  shift, and go to state 35


State 39

   33 do_while_stmt: DO then WHILE • con ';'

    NUMBER      shift, and go to state 14
    IDENTIFIER  shift, and go to state 4
    '('         shift, and go to state 15

    ';'       reduce using rule 37 (con)
    ';'       [reduce using rule 47 (linkedListNode)]
    ';'       [reduce using rule 56 (identifier)]
    ';'       [reduce using rule 58 (number)]
    '+'       reduce using rule 47 (linkedListNode)
    '+'       [reduce using rule 56 (identifier)]
    '+'       [reduce using rule 58 (number)]
    '-'       reduce using rule 47 (linkedListNode)
    '-'       [reduce using rule 56 (identifier)]
    '-'       [reduce using rule 58 (number)]
    '*'       reduce using rule 47 (linkedListNode)
    '*'       [reduce using rule 56 (identifier)]
    '*'       [reduce using rule 58 (number)]
    '/'       reduce using rule 47 (linkedListNode)
    '/'       [reduce using rule 56 (identifier)]
    '/'       [reduce using rule 58 (number)]
    '='       reduce using rule 47 (linkedListNode)
    '='       [reduce using rule 56 (identifier)]
    '='       [reduce using rule 58 (number)]
    $default  reduce using rule 47 (linkedListNode)

    con         go to state 52
    linkedListNode        go to state 17
    identifier  go to state 18
    number      go to state 19


State 40

    6 test: tparam ',' test •

    $default  reduce using rule 6 (test)


State 41

    9 tparam: identifier • identifier

    IDENTIFIER  shift, and go to state 4

    $default  reduce using rule 56 (identifier)

    identifier  go to state 53


State 42

   11 func: identifier identifier '(' • params ')' block

    IDENTIFIER  shift, and go to state 4

    IDENTIFIER  [reduce using rule 56 (identifier)]
    ','         reduce using rule 15 (linkedListNode)
    ','         [reduce using rule 56 (identifier)]
    ')'         reduce using rule 12 (params)
    ')'         [reduce using rule 15 (linkedListNode)]
    ')'         [reduce using rule 56 (identifier)]
    $default    reduce using rule 12 (params)

    params      go to state 54
    linkedListNode       go to state 55
    identifier  go to state 56


State 43

   53 linkedListNode: '(' linkedListNode ')' •

    $default  reduce using rule 53 (linkedListNode)


State 44

   36 if_stmt: IF con then ELSE • else_body

    '{'  shift, and go to state 57

    '{'       [reduce using rule 41 (else_body)]
    $default  reduce using rule 41 (else_body)

    else_body  go to state 58


State 45

   48 linkedListNode: linkedListNode • '+' linkedListNode
   48     | linkedListNode '+' linkedListNode •
   49     | linkedListNode • '-' linkedListNode
   50     | linkedListNode • '*' linkedListNode
   51     | linkedListNode • '/' linkedListNode
   52     | linkedListNode • '=' linkedListNode

    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    '='  shift, and go to state 35

    '+'       [reduce using rule 48 (linkedListNode)]
    '-'       [reduce using rule 48 (linkedListNode)]
    '*'       [reduce using rule 48 (linkedListNode)]
    '/'       [reduce using rule 48 (linkedListNode)]
    '='       [reduce using rule 48 (linkedListNode)]
    $default  reduce using rule 48 (linkedListNode)


State 46

   48 linkedListNode: linkedListNode • '+' linkedListNode
   49     | linkedListNode • '-' linkedListNode
   49     | linkedListNode '-' linkedListNode •
   50     | linkedListNode • '*' linkedListNode
   51     | linkedListNode • '/' linkedListNode
   52     | linkedListNode • '=' linkedListNode

    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    '='  shift, and go to state 35

    '+'       [reduce using rule 49 (linkedListNode)]
    '-'       [reduce using rule 49 (linkedListNode)]
    '*'       [reduce using rule 49 (linkedListNode)]
    '/'       [reduce using rule 49 (linkedListNode)]
    '='       [reduce using rule 49 (linkedListNode)]
    $default  reduce using rule 49 (linkedListNode)


State 47

   48 linkedListNode: linkedListNode • '+' linkedListNode
   49     | linkedListNode • '-' linkedListNode
   50     | linkedListNode • '*' linkedListNode
   50     | linkedListNode '*' linkedListNode •
   51     | linkedListNode • '/' linkedListNode
   52     | linkedListNode • '=' linkedListNode

    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    '='  shift, and go to state 35

    '+'       [reduce using rule 50 (linkedListNode)]
    '-'       [reduce using rule 50 (linkedListNode)]
    '*'       [reduce using rule 50 (linkedListNode)]
    '/'       [reduce using rule 50 (linkedListNode)]
    '='       [reduce using rule 50 (linkedListNode)]
    $default  reduce using rule 50 (linkedListNode)


State 48

   48 linkedListNode: linkedListNode • '+' linkedListNode
   49     | linkedListNode • '-' linkedListNode
   50     | linkedListNode • '*' linkedListNode
   51     | linkedListNode • '/' linkedListNode
   51     | linkedListNode '/' linkedListNode •
   52     | linkedListNode • '=' linkedListNode

    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    '='  shift, and go to state 35

    '+'       [reduce using rule 51 (linkedListNode)]
    '-'       [reduce using rule 51 (linkedListNode)]
    '*'       [reduce using rule 51 (linkedListNode)]
    '/'       [reduce using rule 51 (linkedListNode)]
    '='       [reduce using rule 51 (linkedListNode)]
    $default  reduce using rule 51 (linkedListNode)


State 49

   48 linkedListNode: linkedListNode • '+' linkedListNode
   49     | linkedListNode • '-' linkedListNode
   50     | linkedListNode • '*' linkedListNode
   51     | linkedListNode • '/' linkedListNode
   52     | linkedListNode • '=' linkedListNode
   52     | linkedListNode '=' linkedListNode •

    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    '='  shift, and go to state 35

    '+'       [reduce using rule 52 (linkedListNode)]
    '-'       [reduce using rule 52 (linkedListNode)]
    '*'       [reduce using rule 52 (linkedListNode)]
    '/'       [reduce using rule 52 (linkedListNode)]
    '='       [reduce using rule 52 (linkedListNode)]
    $default  reduce using rule 52 (linkedListNode)


State 50

   40 then: '{' then_exprs '}' •

    $default  reduce using rule 40 (then)


State 51

   44 then_exprs: linkedListNode ';' • then_exprs

    NUMBER      shift, and go to state 14
    IDENTIFIER  shift, and go to state 4
    '('         shift, and go to state 15

    '}'       reduce using rule 43 (then_exprs)
    ';'       reduce using rule 47 (linkedListNode)
    ';'       [reduce using rule 56 (identifier)]
    ';'       [reduce using rule 58 (number)]
    '+'       reduce using rule 47 (linkedListNode)
    '+'       [reduce using rule 56 (identifier)]
    '+'       [reduce using rule 58 (number)]
    '-'       reduce using rule 47 (linkedListNode)
    '-'       [reduce using rule 56 (identifier)]
    '-'       [reduce using rule 58 (number)]
    '*'       reduce using rule 47 (linkedListNode)
    '*'       [reduce using rule 56 (identifier)]
    '*'       [reduce using rule 58 (number)]
    '/'       reduce using rule 47 (linkedListNode)
    '/'       [reduce using rule 56 (identifier)]
    '/'       [reduce using rule 58 (number)]
    '='       reduce using rule 47 (linkedListNode)
    '='       [reduce using rule 56 (identifier)]
    '='       [reduce using rule 58 (number)]
    $default  reduce using rule 47 (linkedListNode)

    then_exprs  go to state 59
    linkedListNode        go to state 38
    identifier  go to state 18
    number      go to state 19


State 52

   33 do_while_stmt: DO then WHILE con • ';'

    ';'  shift, and go to state 60


State 53

    9 tparam: identifier identifier •

    $default  reduce using rule 9 (tparam)


State 54

   11 func: identifier identifier '(' params • ')' block

    ')'  shift, and go to state 61


State 55

   13 params: linkedListNode • ',' params
   14       | linkedListNode •

    ','  shift, and go to state 62

    $default  reduce using rule 14 (params)


State 56

   16 linkedListNode: identifier • identifier

    IDENTIFIER  shift, and go to state 4

    $default  reduce using rule 56 (identifier)

    identifier  go to state 63


State 57

   42 else_body: '{' • else_exprs '}'

    NUMBER      shift, and go to state 14
    IDENTIFIER  shift, and go to state 4
    '('         shift, and go to state 15

    '}'       reduce using rule 45 (else_exprs)
    ';'       reduce using rule 47 (linkedListNode)
    ';'       [reduce using rule 56 (identifier)]
    ';'       [reduce using rule 58 (number)]
    '+'       reduce using rule 47 (linkedListNode)
    '+'       [reduce using rule 56 (identifier)]
    '+'       [reduce using rule 58 (number)]
    '-'       reduce using rule 47 (linkedListNode)
    '-'       [reduce using rule 56 (identifier)]
    '-'       [reduce using rule 58 (number)]
    '*'       reduce using rule 47 (linkedListNode)
    '*'       [reduce using rule 56 (identifier)]
    '*'       [reduce using rule 58 (number)]
    '/'       reduce using rule 47 (linkedListNode)
    '/'       [reduce using rule 56 (identifier)]
    '/'       [reduce using rule 58 (number)]
    '='       reduce using rule 47 (linkedListNode)
    '='       [reduce using rule 56 (identifier)]
    '='       [reduce using rule 58 (number)]
    $default  reduce using rule 47 (linkedListNode)

    else_exprs  go to state 64
    linkedListNode        go to state 65
    identifier  go to state 18
    number      go to state 19


State 58

   36 if_stmt: IF con then ELSE else_body •

    $default  reduce using rule 36 (if_stmt)


State 59

   44 then_exprs: linkedListNode ';' then_exprs •

    $default  reduce using rule 44 (then_exprs)


State 60

   33 do_while_stmt: DO then WHILE con ';' •

    $default  reduce using rule 33 (do_while_stmt)


State 61

   11 func: identifier identifier '(' params ')' • block

    IDENTIFIER  shift, and go to state 4
    '{'         shift, and go to state 66

    EOL         reduce using rule 17 (block)
    EOL         [reduce using rule 20 (variables)]
    IDENTIFIER  [reduce using rule 20 (variables)]
    IDENTIFIER  [reduce using rule 56 (identifier)]
    '{'         [reduce using rule 20 (variables)]
    ';'         reduce using rule 20 (variables)
    ';'         [reduce using rule 22 (variable)]
    ';'         [reduce using rule 56 (identifier)]
    $default    reduce using rule 20 (variables)

    block       go to state 67
    variables   go to state 68
    variable    go to state 69
    identifier  go to state 70


State 62

   13 params: linkedListNode ',' • params

    IDENTIFIER  shift, and go to state 4

    IDENTIFIER  [reduce using rule 56 (identifier)]
    ','         reduce using rule 15 (linkedListNode)
    ','         [reduce using rule 56 (identifier)]
    ')'         reduce using rule 12 (params)
    ')'         [reduce using rule 15 (linkedListNode)]
    ')'         [reduce using rule 56 (identifier)]
    $default    reduce using rule 12 (params)

    params      go to state 71
    linkedListNode       go to state 55
    identifier  go to state 56


State 63

   16 linkedListNode: identifier identifier •

    $default  reduce using rule 16 (linkedListNode)


State 64

   42 else_body: '{' else_exprs • '}'

    '}'  shift, and go to state 72


State 65

   46 else_exprs: linkedListNode • ';' else_exprs
   48 linkedListNode: linkedListNode • '+' linkedListNode
   49     | linkedListNode • '-' linkedListNode
   50     | linkedListNode • '*' linkedListNode
   51     | linkedListNode • '/' linkedListNode
   52     | linkedListNode • '=' linkedListNode

    ';'  shift, and go to state 73
    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    '='  shift, and go to state 35


State 66

   19 block: '{' • variables stmts block '}'

    IDENTIFIER  shift, and go to state 4

    IDENTIFIER  [reduce using rule 20 (variables)]
    IDENTIFIER  [reduce using rule 56 (identifier)]
    ';'         reduce using rule 20 (variables)
    ';'         [reduce using rule 22 (variable)]
    ';'         [reduce using rule 56 (identifier)]
    $default    reduce using rule 20 (variables)

    variables   go to state 74
    variable    go to state 69
    identifier  go to state 70


State 67

   11 func: identifier identifier '(' params ')' block •

    $default  reduce using rule 11 (func)


State 68

   18 block: variables • stmts block

    IF     shift, and go to state 1
    WHILE  shift, and go to state 2
    DO     shift, and go to state 3

    EOL         reduce using rule 24 (stmts)
    EOL         [reduce using rule 26 (stmt)]
    EOL         [reduce using rule 30 (while_stmt)]
    EOL         [reduce using rule 32 (do_while_stmt)]
    EOL         [reduce using rule 34 (if_stmt)]
    IF          [reduce using rule 24 (stmts)]
    IF          [reduce using rule 26 (stmt)]
    IF          [reduce using rule 30 (while_stmt)]
    IF          [reduce using rule 32 (do_while_stmt)]
    IF          [reduce using rule 34 (if_stmt)]
    WHILE       [reduce using rule 24 (stmts)]
    WHILE       [reduce using rule 26 (stmt)]
    WHILE       [reduce using rule 30 (while_stmt)]
    WHILE       [reduce using rule 32 (do_while_stmt)]
    WHILE       [reduce using rule 34 (if_stmt)]
    DO          [reduce using rule 24 (stmts)]
    DO          [reduce using rule 26 (stmt)]
    DO          [reduce using rule 30 (while_stmt)]
    DO          [reduce using rule 32 (do_while_stmt)]
    DO          [reduce using rule 34 (if_stmt)]
    IDENTIFIER  reduce using rule 24 (stmts)
    IDENTIFIER  [reduce using rule 26 (stmt)]
    IDENTIFIER  [reduce using rule 30 (while_stmt)]
    IDENTIFIER  [reduce using rule 32 (do_while_stmt)]
    IDENTIFIER  [reduce using rule 34 (if_stmt)]
    '{'         reduce using rule 24 (stmts)
    '{'         [reduce using rule 26 (stmt)]
    '{'         [reduce using rule 30 (while_stmt)]
    '{'         [reduce using rule 32 (do_while_stmt)]
    '{'         [reduce using rule 34 (if_stmt)]
    '}'         reduce using rule 24 (stmts)
    '}'         [reduce using rule 26 (stmt)]
    '}'         [reduce using rule 30 (while_stmt)]
    '}'         [reduce using rule 32 (do_while_stmt)]
    '}'         [reduce using rule 34 (if_stmt)]
    ';'         reduce using rule 24 (stmts)
    ';'         [reduce using rule 26 (stmt)]
    ';'         [reduce using rule 30 (while_stmt)]
    ';'         [reduce using rule 32 (do_while_stmt)]
    ';'         [reduce using rule 34 (if_stmt)]
    $default    reduce using rule 24 (stmts)

    stmts          go to state 75
    stmt           go to state 76
    while_stmt     go to state 10
    do_while_stmt  go to state 11
    if_stmt        go to state 12


State 69

   21 variables: variable • ';' variables

    ';'  shift, and go to state 77


State 70

   23 variable: identifier • identifier

    IDENTIFIER  shift, and go to state 4

    $default  reduce using rule 56 (identifier)

    identifier  go to state 78


State 71

   13 params: linkedListNode ',' params •

    $default  reduce using rule 13 (params)


State 72

   42 else_body: '{' else_exprs '}' •

    $default  reduce using rule 42 (else_body)


State 73

   46 else_exprs: linkedListNode ';' • else_exprs

    NUMBER      shift, and go to state 14
    IDENTIFIER  shift, and go to state 4
    '('         shift, and go to state 15

    '}'       reduce using rule 45 (else_exprs)
    ';'       reduce using rule 47 (linkedListNode)
    ';'       [reduce using rule 56 (identifier)]
    ';'       [reduce using rule 58 (number)]
    '+'       reduce using rule 47 (linkedListNode)
    '+'       [reduce using rule 56 (identifier)]
    '+'       [reduce using rule 58 (number)]
    '-'       reduce using rule 47 (linkedListNode)
    '-'       [reduce using rule 56 (identifier)]
    '-'       [reduce using rule 58 (number)]
    '*'       reduce using rule 47 (linkedListNode)
    '*'       [reduce using rule 56 (identifier)]
    '*'       [reduce using rule 58 (number)]
    '/'       reduce using rule 47 (linkedListNode)
    '/'       [reduce using rule 56 (identifier)]
    '/'       [reduce using rule 58 (number)]
    '='       reduce using rule 47 (linkedListNode)
    '='       [reduce using rule 56 (identifier)]
    '='       [reduce using rule 58 (number)]
    $default  reduce using rule 47 (linkedListNode)

    else_exprs  go to state 79
    linkedListNode        go to state 65
    identifier  go to state 18
    number      go to state 19


State 74

   19 block: '{' variables • stmts block '}'

    IF     shift, and go to state 1
    WHILE  shift, and go to state 2
    DO     shift, and go to state 3

    IF          [reduce using rule 24 (stmts)]
    IF          [reduce using rule 26 (stmt)]
    IF          [reduce using rule 30 (while_stmt)]
    IF          [reduce using rule 32 (do_while_stmt)]
    IF          [reduce using rule 34 (if_stmt)]
    WHILE       [reduce using rule 24 (stmts)]
    WHILE       [reduce using rule 26 (stmt)]
    WHILE       [reduce using rule 30 (while_stmt)]
    WHILE       [reduce using rule 32 (do_while_stmt)]
    WHILE       [reduce using rule 34 (if_stmt)]
    DO          [reduce using rule 24 (stmts)]
    DO          [reduce using rule 26 (stmt)]
    DO          [reduce using rule 30 (while_stmt)]
    DO          [reduce using rule 32 (do_while_stmt)]
    DO          [reduce using rule 34 (if_stmt)]
    IDENTIFIER  reduce using rule 24 (stmts)
    IDENTIFIER  [reduce using rule 26 (stmt)]
    IDENTIFIER  [reduce using rule 30 (while_stmt)]
    IDENTIFIER  [reduce using rule 32 (do_while_stmt)]
    IDENTIFIER  [reduce using rule 34 (if_stmt)]
    '{'         reduce using rule 24 (stmts)
    '{'         [reduce using rule 26 (stmt)]
    '{'         [reduce using rule 30 (while_stmt)]
    '{'         [reduce using rule 32 (do_while_stmt)]
    '{'         [reduce using rule 34 (if_stmt)]
    '}'         reduce using rule 24 (stmts)
    '}'         [reduce using rule 26 (stmt)]
    '}'         [reduce using rule 30 (while_stmt)]
    '}'         [reduce using rule 32 (do_while_stmt)]
    '}'         [reduce using rule 34 (if_stmt)]
    ';'         reduce using rule 24 (stmts)
    ';'         [reduce using rule 26 (stmt)]
    ';'         [reduce using rule 30 (while_stmt)]
    ';'         [reduce using rule 32 (do_while_stmt)]
    ';'         [reduce using rule 34 (if_stmt)]
    $default    reduce using rule 24 (stmts)

    stmts          go to state 80
    stmt           go to state 76
    while_stmt     go to state 10
    do_while_stmt  go to state 11
    if_stmt        go to state 12


State 75

   18 block: variables stmts • block

    IDENTIFIER  shift, and go to state 4
    '{'         shift, and go to state 66

    EOL         reduce using rule 17 (block)
    EOL         [reduce using rule 20 (variables)]
    IDENTIFIER  [reduce using rule 20 (variables)]
    IDENTIFIER  [reduce using rule 56 (identifier)]
    '{'         [reduce using rule 20 (variables)]
    '}'         reduce using rule 17 (block)
    '}'         [reduce using rule 20 (variables)]
    ';'         reduce using rule 20 (variables)
    ';'         [reduce using rule 22 (variable)]
    ';'         [reduce using rule 56 (identifier)]
    $default    reduce using rule 20 (variables)

    block       go to state 81
    variables   go to state 68
    variable    go to state 69
    identifier  go to state 70


State 76

   25 stmts: stmt • stmts

    IF     shift, and go to state 1
    WHILE  shift, and go to state 2
    DO     shift, and go to state 3

    EOL         reduce using rule 24 (stmts)
    EOL         [reduce using rule 26 (stmt)]
    EOL         [reduce using rule 30 (while_stmt)]
    EOL         [reduce using rule 32 (do_while_stmt)]
    EOL         [reduce using rule 34 (if_stmt)]
    IF          [reduce using rule 24 (stmts)]
    IF          [reduce using rule 26 (stmt)]
    IF          [reduce using rule 30 (while_stmt)]
    IF          [reduce using rule 32 (do_while_stmt)]
    IF          [reduce using rule 34 (if_stmt)]
    WHILE       [reduce using rule 24 (stmts)]
    WHILE       [reduce using rule 26 (stmt)]
    WHILE       [reduce using rule 30 (while_stmt)]
    WHILE       [reduce using rule 32 (do_while_stmt)]
    WHILE       [reduce using rule 34 (if_stmt)]
    DO          [reduce using rule 24 (stmts)]
    DO          [reduce using rule 26 (stmt)]
    DO          [reduce using rule 30 (while_stmt)]
    DO          [reduce using rule 32 (do_while_stmt)]
    DO          [reduce using rule 34 (if_stmt)]
    IDENTIFIER  reduce using rule 24 (stmts)
    IDENTIFIER  [reduce using rule 26 (stmt)]
    IDENTIFIER  [reduce using rule 30 (while_stmt)]
    IDENTIFIER  [reduce using rule 32 (do_while_stmt)]
    IDENTIFIER  [reduce using rule 34 (if_stmt)]
    '{'         reduce using rule 24 (stmts)
    '{'         [reduce using rule 26 (stmt)]
    '{'         [reduce using rule 30 (while_stmt)]
    '{'         [reduce using rule 32 (do_while_stmt)]
    '{'         [reduce using rule 34 (if_stmt)]
    '}'         reduce using rule 24 (stmts)
    '}'         [reduce using rule 26 (stmt)]
    '}'         [reduce using rule 30 (while_stmt)]
    '}'         [reduce using rule 32 (do_while_stmt)]
    '}'         [reduce using rule 34 (if_stmt)]
    ';'         reduce using rule 24 (stmts)
    ';'         [reduce using rule 26 (stmt)]
    ';'         [reduce using rule 30 (while_stmt)]
    ';'         [reduce using rule 32 (do_while_stmt)]
    ';'         [reduce using rule 34 (if_stmt)]
    $default    reduce using rule 24 (stmts)

    stmts          go to state 82
    stmt           go to state 76
    while_stmt     go to state 10
    do_while_stmt  go to state 11
    if_stmt        go to state 12


State 77

   21 variables: variable ';' • variables

    IDENTIFIER  shift, and go to state 4

    IDENTIFIER  [reduce using rule 20 (variables)]
    IDENTIFIER  [reduce using rule 56 (identifier)]
    ';'         reduce using rule 20 (variables)
    ';'         [reduce using rule 22 (variable)]
    ';'         [reduce using rule 56 (identifier)]
    $default    reduce using rule 20 (variables)

    variables   go to state 83
    variable    go to state 69
    identifier  go to state 70


State 78

   23 variable: identifier identifier •

    $default  reduce using rule 23 (variable)


State 79

   46 else_exprs: linkedListNode ';' else_exprs •

    $default  reduce using rule 46 (else_exprs)


State 80

   19 block: '{' variables stmts • block '}'

    IDENTIFIER  shift, and go to state 4
    '{'         shift, and go to state 66

    IDENTIFIER  [reduce using rule 20 (variables)]
    IDENTIFIER  [reduce using rule 56 (identifier)]
    '{'         [reduce using rule 20 (variables)]
    '}'         reduce using rule 17 (block)
    '}'         [reduce using rule 20 (variables)]
    ';'         reduce using rule 20 (variables)
    ';'         [reduce using rule 22 (variable)]
    ';'         [reduce using rule 56 (identifier)]
    $default    reduce using rule 20 (variables)

    block       go to state 84
    variables   go to state 68
    variable    go to state 69
    identifier  go to state 70


State 81

   18 block: variables stmts block •

    $default  reduce using rule 18 (block)


State 82

   25 stmts: stmt stmts •

    $default  reduce using rule 25 (stmts)


State 83

   21 variables: variable ';' variables •

    $default  reduce using rule 21 (variables)


State 84

   19 block: '{' variables stmts block • '}'

    '}'  shift, and go to state 85


State 85

   19 block: '{' variables stmts block '}' •

    $default  reduce using rule 19 (block)
