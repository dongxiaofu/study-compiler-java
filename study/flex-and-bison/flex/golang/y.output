Nonterminals useless in grammar

    calclist
    factor
    term
    else_body


Terminals unused in grammar

    ADD
    SUB
    MUL
    DIV
    ABS
    OP
    CP
    ELSE
    COMMENT
    '{'
    '}'


Rules useless in grammar

   20 else_body: %empty
   21          | '{' IDENTIFIER '=' NUMBER ';' '}'
   22          | IDENTIFIER '=' NUMBER ';'


Rules useless in parser due to conflicts

    3 stmt: %empty

   16 expr: expr


State 0 conflicts: 2 reduce/reduce
State 2 conflicts: 3 shift/reduce, 10 reduce/reduce
State 8 conflicts: 6 shift/reduce
State 10 conflicts: 5 shift/reduce, 10 reduce/reduce
State 11 conflicts: 6 shift/reduce
State 14 conflicts: 3 shift/reduce
State 15 conflicts: 3 shift/reduce
State 16 conflicts: 3 shift/reduce
State 17 conflicts: 3 shift/reduce
State 18 conflicts: 3 shift/reduce
State 21 conflicts: 5 shift/reduce, 11 reduce/reduce
State 22 conflicts: 5 shift/reduce, 11 reduce/reduce
State 23 conflicts: 5 shift/reduce, 11 reduce/reduce
State 24 conflicts: 5 shift/reduce, 11 reduce/reduce
State 25 conflicts: 5 shift/reduce, 11 reduce/reduce


Grammar

    0 $accept: compilation_unit $end

    1 compilation_unit: %empty
    2                 | stmt

    3 stmt: %empty
    4     | then
    5     | IF con then EOL

    6 con: %empty
    7    | expr

    8 then: %empty
    9     | expr ';'

   10 expr: %empty
   11     | expr '+' expr
   12     | expr '-' expr
   13     | expr '*' expr
   14     | expr '/' expr
   15     | expr '=' expr
   16     | expr
   17     | '(' expr ')'
   18     | IDENTIFIER
   19     | NUMBER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 17
    ')' (41) 17
    '*' (42) 13
    '+' (43) 11
    '-' (45) 12
    '/' (47) 14
    ';' (59) 9
    '=' (61) 15
    '{' (123)
    '}' (125)
    error (256)
    NUMBER <intval> (258) 19
    ADD <strval> (259)
    SUB <strval> (260)
    MUL <strval> (261)
    DIV <strval> (262)
    ABS <strval> (263)
    EOL <strval> (264) 5
    OP (265)
    CP (266)
    IF <strval> (267) 5
    ELSE <strval> (268)
    COMMENT (269)
    IDENTIFIER <strval> (270) 18


Nonterminals, with rules where they appear

    $accept (26)
        on left: 0
    compilation_unit <node> (27)
        on left: 1 2
        on right: 0
    stmt <node> (28)
        on left: 3 4 5
        on right: 2
    con <node> (29)
        on left: 6 7
        on right: 5
    then <node> (30)
        on left: 8 9
        on right: 4 5
    expr <node> (31)
        on left: 10 11 12 13 14 15 16 17 18 19
        on right: 7 9 11 12 13 14 15 16 17


State 0

    0 $accept: • compilation_unit $end

    NUMBER      shift, and go to state 1
    IF          shift, and go to state 2
    IDENTIFIER  shift, and go to state 3
    '('         shift, and go to state 4

    $end      reduce using rule 1 (compilation_unit)
    $end      [reduce using rule 3 (stmt)]
    $end      [reduce using rule 8 (then)]
    $default  reduce using rule 10 (expr)

    compilation_unit  go to state 5
    stmt              go to state 6
    then              go to state 7
    expr              go to state 8


State 1

   19 expr: NUMBER •

    $default  reduce using rule 19 (expr)


State 2

    5 stmt: IF • con then EOL

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 3
    '('         shift, and go to state 4

    NUMBER      [reduce using rule 6 (con)]
    NUMBER      [reduce using rule 10 (expr)]
    EOL         reduce using rule 6 (con)
    EOL         [reduce using rule 10 (expr)]
    IDENTIFIER  [reduce using rule 6 (con)]
    IDENTIFIER  [reduce using rule 10 (expr)]
    ';'         reduce using rule 6 (con)
    ';'         [reduce using rule 10 (expr)]
    '='         reduce using rule 6 (con)
    '='         [reduce using rule 10 (expr)]
    '+'         reduce using rule 6 (con)
    '+'         [reduce using rule 10 (expr)]
    '-'         reduce using rule 6 (con)
    '-'         [reduce using rule 10 (expr)]
    '*'         reduce using rule 6 (con)
    '*'         [reduce using rule 10 (expr)]
    '/'         reduce using rule 6 (con)
    '/'         [reduce using rule 10 (expr)]
    '('         [reduce using rule 6 (con)]
    '('         [reduce using rule 10 (expr)]
    $default    reduce using rule 6 (con)

    con   go to state 9
    expr  go to state 10


State 3

   18 expr: IDENTIFIER •

    $default  reduce using rule 18 (expr)


State 4

   17 expr: '(' • expr ')'

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 3
    '('         shift, and go to state 4

    $default  reduce using rule 10 (expr)

    expr  go to state 11


State 5

    0 $accept: compilation_unit • $end

    $end  shift, and go to state 12


State 6

    2 compilation_unit: stmt •

    $default  reduce using rule 2 (compilation_unit)


State 7

    4 stmt: then •

    $default  reduce using rule 4 (stmt)


State 8

    9 then: expr • ';'
   11 expr: expr • '+' expr
   12     | expr • '-' expr
   13     | expr • '*' expr
   14     | expr • '/' expr
   15     | expr • '=' expr
   16     | expr •

    ';'  shift, and go to state 13
    '='  shift, and go to state 14
    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '*'  shift, and go to state 17
    '/'  shift, and go to state 18

    ';'  [reduce using rule 16 (expr)]
    '='  [reduce using rule 16 (expr)]
    '+'  [reduce using rule 16 (expr)]
    '-'  [reduce using rule 16 (expr)]
    '*'  [reduce using rule 16 (expr)]
    '/'  [reduce using rule 16 (expr)]


State 9

    5 stmt: IF con • then EOL

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 3
    '('         shift, and go to state 4

    EOL       reduce using rule 8 (then)
    $default  reduce using rule 10 (expr)

    then  go to state 19
    expr  go to state 8


State 10

    7 con: expr •
   11 expr: expr • '+' expr
   12     | expr • '-' expr
   13     | expr • '*' expr
   14     | expr • '/' expr
   15     | expr • '=' expr
   16     | expr •

    '='  shift, and go to state 14
    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '*'  shift, and go to state 17
    '/'  shift, and go to state 18

    NUMBER      reduce using rule 7 (con)
    NUMBER      [reduce using rule 16 (expr)]
    EOL         reduce using rule 7 (con)
    EOL         [reduce using rule 16 (expr)]
    IDENTIFIER  reduce using rule 7 (con)
    IDENTIFIER  [reduce using rule 16 (expr)]
    ';'         reduce using rule 7 (con)
    ';'         [reduce using rule 16 (expr)]
    '='         [reduce using rule 7 (con)]
    '='         [reduce using rule 16 (expr)]
    '+'         [reduce using rule 7 (con)]
    '+'         [reduce using rule 16 (expr)]
    '-'         [reduce using rule 7 (con)]
    '-'         [reduce using rule 16 (expr)]
    '*'         [reduce using rule 7 (con)]
    '*'         [reduce using rule 16 (expr)]
    '/'         [reduce using rule 7 (con)]
    '/'         [reduce using rule 16 (expr)]
    '('         reduce using rule 7 (con)
    '('         [reduce using rule 16 (expr)]
    $default    reduce using rule 7 (con)


State 11

   11 expr: expr • '+' expr
   12     | expr • '-' expr
   13     | expr • '*' expr
   14     | expr • '/' expr
   15     | expr • '=' expr
   16     | expr •
   17     | '(' expr • ')'

    '='  shift, and go to state 14
    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '*'  shift, and go to state 17
    '/'  shift, and go to state 18
    ')'  shift, and go to state 20

    '='  [reduce using rule 16 (expr)]
    '+'  [reduce using rule 16 (expr)]
    '-'  [reduce using rule 16 (expr)]
    '*'  [reduce using rule 16 (expr)]
    '/'  [reduce using rule 16 (expr)]
    ')'  [reduce using rule 16 (expr)]


State 12

    0 $accept: compilation_unit $end •

    $default  accept


State 13

    9 then: expr ';' •

    $default  reduce using rule 9 (then)


State 14

   15 expr: expr '=' • expr

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 3
    '('         shift, and go to state 4

    NUMBER      [reduce using rule 10 (expr)]
    IDENTIFIER  [reduce using rule 10 (expr)]
    '('         [reduce using rule 10 (expr)]
    $default    reduce using rule 10 (expr)

    expr  go to state 21


State 15

   11 expr: expr '+' • expr

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 3
    '('         shift, and go to state 4

    NUMBER      [reduce using rule 10 (expr)]
    IDENTIFIER  [reduce using rule 10 (expr)]
    '('         [reduce using rule 10 (expr)]
    $default    reduce using rule 10 (expr)

    expr  go to state 22


State 16

   12 expr: expr '-' • expr

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 3
    '('         shift, and go to state 4

    NUMBER      [reduce using rule 10 (expr)]
    IDENTIFIER  [reduce using rule 10 (expr)]
    '('         [reduce using rule 10 (expr)]
    $default    reduce using rule 10 (expr)

    expr  go to state 23


State 17

   13 expr: expr '*' • expr

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 3
    '('         shift, and go to state 4

    NUMBER      [reduce using rule 10 (expr)]
    IDENTIFIER  [reduce using rule 10 (expr)]
    '('         [reduce using rule 10 (expr)]
    $default    reduce using rule 10 (expr)

    expr  go to state 24


State 18

   14 expr: expr '/' • expr

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 3
    '('         shift, and go to state 4

    NUMBER      [reduce using rule 10 (expr)]
    IDENTIFIER  [reduce using rule 10 (expr)]
    '('         [reduce using rule 10 (expr)]
    $default    reduce using rule 10 (expr)

    expr  go to state 25


State 19

    5 stmt: IF con then • EOL

    EOL  shift, and go to state 26


State 20

   17 expr: '(' expr ')' •

    $default  reduce using rule 17 (expr)


State 21

   11 expr: expr • '+' expr
   12     | expr • '-' expr
   13     | expr • '*' expr
   14     | expr • '/' expr
   15     | expr • '=' expr
   15     | expr '=' expr •
   16     | expr •

    '='  shift, and go to state 14
    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '*'  shift, and go to state 17
    '/'  shift, and go to state 18

    NUMBER      reduce using rule 15 (expr)
    NUMBER      [reduce using rule 16 (expr)]
    EOL         reduce using rule 15 (expr)
    EOL         [reduce using rule 16 (expr)]
    IDENTIFIER  reduce using rule 15 (expr)
    IDENTIFIER  [reduce using rule 16 (expr)]
    ';'         reduce using rule 15 (expr)
    ';'         [reduce using rule 16 (expr)]
    '='         [reduce using rule 15 (expr)]
    '='         [reduce using rule 16 (expr)]
    '+'         [reduce using rule 15 (expr)]
    '+'         [reduce using rule 16 (expr)]
    '-'         [reduce using rule 15 (expr)]
    '-'         [reduce using rule 16 (expr)]
    '*'         [reduce using rule 15 (expr)]
    '*'         [reduce using rule 16 (expr)]
    '/'         [reduce using rule 15 (expr)]
    '/'         [reduce using rule 16 (expr)]
    '('         reduce using rule 15 (expr)
    '('         [reduce using rule 16 (expr)]
    ')'         reduce using rule 15 (expr)
    ')'         [reduce using rule 16 (expr)]
    $default    reduce using rule 15 (expr)


State 22

   11 expr: expr • '+' expr
   11     | expr '+' expr •
   12     | expr • '-' expr
   13     | expr • '*' expr
   14     | expr • '/' expr
   15     | expr • '=' expr
   16     | expr •

    '='  shift, and go to state 14
    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '*'  shift, and go to state 17
    '/'  shift, and go to state 18

    NUMBER      reduce using rule 11 (expr)
    NUMBER      [reduce using rule 16 (expr)]
    EOL         reduce using rule 11 (expr)
    EOL         [reduce using rule 16 (expr)]
    IDENTIFIER  reduce using rule 11 (expr)
    IDENTIFIER  [reduce using rule 16 (expr)]
    ';'         reduce using rule 11 (expr)
    ';'         [reduce using rule 16 (expr)]
    '='         [reduce using rule 11 (expr)]
    '='         [reduce using rule 16 (expr)]
    '+'         [reduce using rule 11 (expr)]
    '+'         [reduce using rule 16 (expr)]
    '-'         [reduce using rule 11 (expr)]
    '-'         [reduce using rule 16 (expr)]
    '*'         [reduce using rule 11 (expr)]
    '*'         [reduce using rule 16 (expr)]
    '/'         [reduce using rule 11 (expr)]
    '/'         [reduce using rule 16 (expr)]
    '('         reduce using rule 11 (expr)
    '('         [reduce using rule 16 (expr)]
    ')'         reduce using rule 11 (expr)
    ')'         [reduce using rule 16 (expr)]
    $default    reduce using rule 11 (expr)


State 23

   11 expr: expr • '+' expr
   12     | expr • '-' expr
   12     | expr '-' expr •
   13     | expr • '*' expr
   14     | expr • '/' expr
   15     | expr • '=' expr
   16     | expr •

    '='  shift, and go to state 14
    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '*'  shift, and go to state 17
    '/'  shift, and go to state 18

    NUMBER      reduce using rule 12 (expr)
    NUMBER      [reduce using rule 16 (expr)]
    EOL         reduce using rule 12 (expr)
    EOL         [reduce using rule 16 (expr)]
    IDENTIFIER  reduce using rule 12 (expr)
    IDENTIFIER  [reduce using rule 16 (expr)]
    ';'         reduce using rule 12 (expr)
    ';'         [reduce using rule 16 (expr)]
    '='         [reduce using rule 12 (expr)]
    '='         [reduce using rule 16 (expr)]
    '+'         [reduce using rule 12 (expr)]
    '+'         [reduce using rule 16 (expr)]
    '-'         [reduce using rule 12 (expr)]
    '-'         [reduce using rule 16 (expr)]
    '*'         [reduce using rule 12 (expr)]
    '*'         [reduce using rule 16 (expr)]
    '/'         [reduce using rule 12 (expr)]
    '/'         [reduce using rule 16 (expr)]
    '('         reduce using rule 12 (expr)
    '('         [reduce using rule 16 (expr)]
    ')'         reduce using rule 12 (expr)
    ')'         [reduce using rule 16 (expr)]
    $default    reduce using rule 12 (expr)


State 24

   11 expr: expr • '+' expr
   12     | expr • '-' expr
   13     | expr • '*' expr
   13     | expr '*' expr •
   14     | expr • '/' expr
   15     | expr • '=' expr
   16     | expr •

    '='  shift, and go to state 14
    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '*'  shift, and go to state 17
    '/'  shift, and go to state 18

    NUMBER      reduce using rule 13 (expr)
    NUMBER      [reduce using rule 16 (expr)]
    EOL         reduce using rule 13 (expr)
    EOL         [reduce using rule 16 (expr)]
    IDENTIFIER  reduce using rule 13 (expr)
    IDENTIFIER  [reduce using rule 16 (expr)]
    ';'         reduce using rule 13 (expr)
    ';'         [reduce using rule 16 (expr)]
    '='         [reduce using rule 13 (expr)]
    '='         [reduce using rule 16 (expr)]
    '+'         [reduce using rule 13 (expr)]
    '+'         [reduce using rule 16 (expr)]
    '-'         [reduce using rule 13 (expr)]
    '-'         [reduce using rule 16 (expr)]
    '*'         [reduce using rule 13 (expr)]
    '*'         [reduce using rule 16 (expr)]
    '/'         [reduce using rule 13 (expr)]
    '/'         [reduce using rule 16 (expr)]
    '('         reduce using rule 13 (expr)
    '('         [reduce using rule 16 (expr)]
    ')'         reduce using rule 13 (expr)
    ')'         [reduce using rule 16 (expr)]
    $default    reduce using rule 13 (expr)


State 25

   11 expr: expr • '+' expr
   12     | expr • '-' expr
   13     | expr • '*' expr
   14     | expr • '/' expr
   14     | expr '/' expr •
   15     | expr • '=' expr
   16     | expr •

    '='  shift, and go to state 14
    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '*'  shift, and go to state 17
    '/'  shift, and go to state 18

    NUMBER      reduce using rule 14 (expr)
    NUMBER      [reduce using rule 16 (expr)]
    EOL         reduce using rule 14 (expr)
    EOL         [reduce using rule 16 (expr)]
    IDENTIFIER  reduce using rule 14 (expr)
    IDENTIFIER  [reduce using rule 16 (expr)]
    ';'         reduce using rule 14 (expr)
    ';'         [reduce using rule 16 (expr)]
    '='         [reduce using rule 14 (expr)]
    '='         [reduce using rule 16 (expr)]
    '+'         [reduce using rule 14 (expr)]
    '+'         [reduce using rule 16 (expr)]
    '-'         [reduce using rule 14 (expr)]
    '-'         [reduce using rule 16 (expr)]
    '*'         [reduce using rule 14 (expr)]
    '*'         [reduce using rule 16 (expr)]
    '/'         [reduce using rule 14 (expr)]
    '/'         [reduce using rule 16 (expr)]
    '('         reduce using rule 14 (expr)
    '('         [reduce using rule 16 (expr)]
    ')'         reduce using rule 14 (expr)
    ')'         [reduce using rule 16 (expr)]
    $default    reduce using rule 14 (expr)


State 26

    5 stmt: IF con then EOL •

    $default  reduce using rule 5 (stmt)
