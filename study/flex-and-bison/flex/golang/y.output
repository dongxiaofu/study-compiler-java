Nonterminals useless in grammar

    then
    else_body
    calclist
    factor
    term


Terminals unused in grammar

    ADD
    SUB
    MUL
    DIV
    ABS
    OP
    CP
    ELSE
    COMMENT


Grammar

    0 $accept: compilation_unit $end

    1 compilation_unit: %empty
    2                 | IF con EOL

    3 con: %empty
    4    | '(' IDENTIFIER ')'
    5    | '(' IDENTIFIER '=' NUMBER ')'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 4 5
    ')' (41) 4 5
    '=' (61) 5
    error (256)
    NUMBER <intval> (258) 5
    ADD <strval> (259)
    SUB <strval> (260)
    MUL <strval> (261)
    DIV <strval> (262)
    ABS <strval> (263)
    EOL <strval> (264) 2
    OP (265)
    CP (266)
    IF <strval> (267) 2
    ELSE <strval> (268)
    COMMENT (269)
    IDENTIFIER <strval> (270) 4 5


Nonterminals, with rules where they appear

    $accept (19)
        on left: 0
    compilation_unit <in> (20)
        on left: 1 2
        on right: 0
    con <strval> (21)
        on left: 3 4 5
        on right: 2


State 0

    0 $accept: • compilation_unit $end

    IF  shift, and go to state 1

    $default  reduce using rule 1 (compilation_unit)

    compilation_unit  go to state 2


State 1

    2 compilation_unit: IF • con EOL

    '('  shift, and go to state 3

    $default  reduce using rule 3 (con)

    con  go to state 4


State 2

    0 $accept: compilation_unit • $end

    $end  shift, and go to state 5


State 3

    4 con: '(' • IDENTIFIER ')'
    5    | '(' • IDENTIFIER '=' NUMBER ')'

    IDENTIFIER  shift, and go to state 6


State 4

    2 compilation_unit: IF con • EOL

    EOL  shift, and go to state 7


State 5

    0 $accept: compilation_unit $end •

    $default  accept


State 6

    4 con: '(' IDENTIFIER • ')'
    5    | '(' IDENTIFIER • '=' NUMBER ')'

    ')'  shift, and go to state 8
    '='  shift, and go to state 9


State 7

    2 compilation_unit: IF con EOL •

    $default  reduce using rule 2 (compilation_unit)


State 8

    4 con: '(' IDENTIFIER ')' •

    $default  reduce using rule 4 (con)


State 9

    5 con: '(' IDENTIFIER '=' • NUMBER ')'

    NUMBER  shift, and go to state 10


State 10

    5 con: '(' IDENTIFIER '=' NUMBER • ')'

    ')'  shift, and go to state 11


State 11

    5 con: '(' IDENTIFIER '=' NUMBER ')' •

    $default  reduce using rule 5 (con)
