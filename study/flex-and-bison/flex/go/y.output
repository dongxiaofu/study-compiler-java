Nonterminals useless in grammar

    calclist
    factor
    term


Terminals unused in grammar

    ADD
    SUB
    MUL
    DIV
    ABS
    OP
    CP
    COMMENT


State 4 conflicts: 1 shift/reduce


Grammar

    0 $accept: compilation_unit $end

    1 compilation_unit: %empty
    2                 | IF con EOL
    3                 | IF con then EOL
    4                 | IF con then ELSE else_body EOL

    5 con: %empty
    6    | '(' linkedListNode ')'

    7 then: %empty
    8     | IDENTIFIER '=' NUMBER ';'

    9 else_body: %empty
   10          | '{' IDENTIFIER '=' NUMBER ';' '}'
   11          | IDENTIFIER '=' NUMBER ';'

   12 linkedListNode: %empty
   13     | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 6
    ')' (41) 6
    ';' (59) 8 10 11
    '=' (61) 8 10 11
    '{' (123) 10
    '}' (125) 10
    error (256)
    NUMBER <intval> (258) 8 10 11
    ADD <strval> (259)
    SUB <strval> (260)
    MUL <strval> (261)
    DIV <strval> (262)
    ABS <strval> (263)
    EOL <strval> (264) 2 3 4
    OP (265)
    CP (266)
    IF <strval> (267) 2 3 4
    ELSE <strval> (268) 4
    COMMENT (269)
    IDENTIFIER <strval> (270) 8 10 11 13


Nonterminals, with rules where they appear

    $accept (22)
        on left: 0
    compilation_unit <in> (23)
        on left: 1 2 3 4
        on right: 0
    con <strval> (24)
        on left: 5 6
        on right: 2 3 4
    then <strval> (25)
        on left: 7 8
        on right: 3 4
    else_body <strval> (26)
        on left: 9 10 11
        on right: 4
    linkedListNode <str1> (27)
        on left: 12 13
        on right: 6


State 0

    0 $accept: • compilation_unit $end

    IF  shift, and go to state 1

    $default  reduce using rule 1 (compilation_unit)

    compilation_unit  go to state 2


State 1

    2 compilation_unit: IF • con EOL
    3                 | IF • con then EOL
    4                 | IF • con then ELSE else_body EOL

    '('  shift, and go to state 3

    $default  reduce using rule 5 (con)

    con  go to state 4


State 2

    0 $accept: compilation_unit • $end

    $end  shift, and go to state 5


State 3

    6 con: '(' • linkedListNode ')'

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 12 (linkedListNode)

    linkedListNode  go to state 7


State 4

    2 compilation_unit: IF con • EOL
    3                 | IF con • then EOL
    4                 | IF con • then ELSE else_body EOL

    EOL         shift, and go to state 8
    IDENTIFIER  shift, and go to state 9

    EOL       [reduce using rule 7 (then)]
    $default  reduce using rule 7 (then)

    then  go to state 10


State 5

    0 $accept: compilation_unit $end •

    $default  accept


State 6

   13 linkedListNode: IDENTIFIER •

    $default  reduce using rule 13 (linkedListNode)


State 7

    6 con: '(' linkedListNode • ')'

    ')'  shift, and go to state 11


State 8

    2 compilation_unit: IF con EOL •

    $default  reduce using rule 2 (compilation_unit)


State 9

    8 then: IDENTIFIER • '=' NUMBER ';'

    '='  shift, and go to state 12


State 10

    3 compilation_unit: IF con then • EOL
    4                 | IF con then • ELSE else_body EOL

    EOL   shift, and go to state 13
    ELSE  shift, and go to state 14


State 11

    6 con: '(' linkedListNode ')' •

    $default  reduce using rule 6 (con)


State 12

    8 then: IDENTIFIER '=' • NUMBER ';'

    NUMBER  shift, and go to state 15


State 13

    3 compilation_unit: IF con then EOL •

    $default  reduce using rule 3 (compilation_unit)


State 14

    4 compilation_unit: IF con then ELSE • else_body EOL

    IDENTIFIER  shift, and go to state 16
    '{'         shift, and go to state 17

    $default  reduce using rule 9 (else_body)

    else_body  go to state 18


State 15

    8 then: IDENTIFIER '=' NUMBER • ';'

    ';'  shift, and go to state 19


State 16

   11 else_body: IDENTIFIER • '=' NUMBER ';'

    '='  shift, and go to state 20


State 17

   10 else_body: '{' • IDENTIFIER '=' NUMBER ';' '}'

    IDENTIFIER  shift, and go to state 21


State 18

    4 compilation_unit: IF con then ELSE else_body • EOL

    EOL  shift, and go to state 22


State 19

    8 then: IDENTIFIER '=' NUMBER ';' •

    $default  reduce using rule 8 (then)


State 20

   11 else_body: IDENTIFIER '=' • NUMBER ';'

    NUMBER  shift, and go to state 23


State 21

   10 else_body: '{' IDENTIFIER • '=' NUMBER ';' '}'

    '='  shift, and go to state 24


State 22

    4 compilation_unit: IF con then ELSE else_body EOL •

    $default  reduce using rule 4 (compilation_unit)


State 23

   11 else_body: IDENTIFIER '=' NUMBER • ';'

    ';'  shift, and go to state 25


State 24

   10 else_body: '{' IDENTIFIER '=' • NUMBER ';' '}'

    NUMBER  shift, and go to state 26


State 25

   11 else_body: IDENTIFIER '=' NUMBER ';' •

    $default  reduce using rule 11 (else_body)


State 26

   10 else_body: '{' IDENTIFIER '=' NUMBER • ';' '}'

    ';'  shift, and go to state 27


State 27

   10 else_body: '{' IDENTIFIER '=' NUMBER ';' • '}'

    '}'  shift, and go to state 28


State 28

   10 else_body: '{' IDENTIFIER '=' NUMBER ';' '}' •

    $default  reduce using rule 10 (else_body)
